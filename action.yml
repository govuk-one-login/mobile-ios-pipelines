name: 'iOS pipelines'
description: 'Run pipelines to validate code before merge and deploy afterwards'
icon: 'check-circle'
color: 'blue'
inputs:
  ACTION_TYPE:
    description: 'Which type of action to perform.'
    required: true
    type: choice
    options:
    - Pull Request
    - Merge
  XCODE_VERSION:
    description: 'The version of Xcode to build the iOS package from'
    required: true
  PACKAGE_SCHEME:
    description: 'The scheme to build the package against'
    required: true
  RUN_DESTINATION:
    description: 'A destination specifier describing the device (or devices) to use as a destination'
    required: true
  SONAR_TOKEN:
    description: 'A token for SonarCloud to enable the workflow to read and upload new quality reports.'
    required: true
  GITHUB_TOKEN:
    description: 'A GitHub API token that is automatically created by the workflow. This is required for release workflows to upload new release artefacts.'
    required: false

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # pin@v4
      with:
        lfs: 'true'
        fetch-depth: 0

    - name: Run Linter
      run: |
        brew install swiftlint
        swiftlint --strict
      shell: bash

    - name: Validate Pull Request Name
      uses: Oliver-Binns/Versioning@4695fba9f63bed5b557094f9a64f7a2b1a7639e8 # pin@v1.1.0
      with:
        ACTION_TYPE: 'Validate'

    - name: Xcode Select
      run: |
        xcode-select -s /Applications/Xcode_${{ inputs.XCODE_VERSION }}.app
      shell: bash

    - name: Build and Test
      run: |
        xcodebuild -scheme ${{ inputs.PACKAGE_SCHEME }} test \
          -destination "${{ inputs.RUN_DESTINATION }}" \
          -enableCodeCoverage YES \
          -resultBundlePath result.xcresult | xcbeautify
      shell: bash

    - name: Run Sonar Script
      run: |
        $GITHUB_ACTION_PATH/xccov-to-sonarqube-generic.sh result.xcresult > sonarqube-generic-coverage.xml
      shell: bash

    - name: Run Pull Request SonarCloud Scanning
      if: ${{ inputs.ACTION_TYPE == 'Pull Request' }}
      run: |
        pull_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")

        sonar-scanner \
          -Dsonar.token=${{ inputs.SONAR_TOKEN }} \
          -Dsonar.coverageReportPaths="sonarqube-generic-coverage.xml" \
          -Dsonar.pullrequest.key=$pull_number \
          -Dsonar.pullrequest.branch=${{ github.head_ref }} \
          -Dsonar.pullrequest.base=${{ github.base_ref }}
      shell: bash

    - name: Check SonarCloud Results
      if: ${{ inputs.ACTION_TYPE == 'Pull Request' }}
      uses: sonarsource/sonarqube-quality-gate-action@d304d050d930b02a896b0f85935344f023928496 # pin@v1.1.0
      env:
        SONAR_TOKEN: ${{ inputs.SONAR_TOKEN }}

    - name: Run Merge SonarCloud Scanning
      if: ${{ inputs.ACTION_TYPE == 'Merge' }}
      run: |
        sonar-scanner \
          -Dsonar.token=${{ inputs.SONAR_TOKEN }} \
          -Dsonar.coverageReportPaths="sonarqube-generic-coverage.xml"
      shell: bash

    - name: Increment Version
      if: ${{ inputs.ACTION_TYPE == 'Merge' }}
      id: versioning
      uses: Oliver-Binns/Versioning@4695fba9f63bed5b557094f9a64f7a2b1a7639e8 # pin@v1.1.0
      with:
        ACTION_TYPE: 'Release'
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
